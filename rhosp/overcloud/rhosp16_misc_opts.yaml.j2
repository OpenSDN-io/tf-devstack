{%- if vrouter_huge_pages_1g is defined and vrouter_huge_pages_1g|length %}
  {%- set hp1gb = vrouter_huge_pages_1g %}
  {%- set hp2mb = '' %}
  {%- set kernel_args = "default_hugepagesz=1GB hugepagesz=1G hugepages=" + vrouter_huge_pages_1g %}
  {%- set sysctl_hp = vrouter_huge_pages_1g %}
{% else %}
  {%- set hp1gb = '' %}
  {%- set hp2mb = '512' %}
  {%- set kernel_args = '' %}
  {%- set sysctl_hp = '512' %}
{%- endif %}

{%- set overcloud_cont_instance = overcloud_cont_instance | default('') %}
{%- set overcloud_cont_instance = (overcloud_cont_instance.split(',') | length) if overcloud_cont_instance != '' else 0 %}

{%- set overcloud_ctrlcont_instance = overcloud_ctrlcont_instance | default('') %}
{%- if CONTROL_PLANE_ORCHESTRATOR | default('') != 'operator' %}
  {%- set overcloud_ctrlcont_instance = (overcloud_ctrlcont_instance.split(',') | length) if overcloud_ctrlcont_instance != '' else 0 %}
  {%- set overcloud_operator_instance = 0 %}
{% else %}
  {%- set overcloud_operator_instance = (overcloud_ctrlcont_instance.split(',') | length) if overcloud_ctrlcont_instance != '' else 0 %}
  {%- set overcloud_ctrlcont_instance = 0 %}
{%- endif %}

{%- set overcloud_compute_instance = overcloud_compute_instance | default('') %}
{%- set overcloud_compute_instance = (overcloud_compute_instance.split(',') | length) if overcloud_compute_instance != '' else 0 %}
{%- set overcloud_computel3mh_instance = 0 %}
{%- if L3MH_CIDR | default('') != '' %}
  {%- set overcloud_computel3mh_instance = overcloud_compute_instance %}
  {%- set overcloud_compute_instance = 0 %}
{%- endif %}

{%- set overcloud_dpdk_instance = overcloud_dpdk_instance | default('') %}
{%- set overcloud_dpdk_instance = (overcloud_dpdk_instance.split(',') | length)  if overcloud_dpdk_instance != '' else 0 %}

{%- set overcloud_sriov_instance = overcloud_sriov_instance | default('') %}
{%- set overcloud_sriov_instance = (overcloud_sriov_instance.split(',') | length)  if overcloud_sriov_instance != '' else 0 %}

{%- set overcloud_ceph_instance = overcloud_ceph_instance | default('') %}
{%- set overcloud_ceph_instance = (overcloud_ceph_instance.split(',') | length)  if overcloud_ceph_instance != '' else 0 %}

{%- if overcloud_cont_instance > 1 %}
  {%- set enable_galera = 'true' %}
  {%- if overcloud_ceph_instance > 0 %}
    {%- set glance_backend_storage = 'rbd' %}
  {% else %}
    {%- set glance_backend_storage = 'swift' %}
  {%- endif %}
{% else %}
    {%- set enable_galera = 'false' %}
    {%- set glance_backend_storage = 'file' %}
{%- endif %}

resource_registry:
  OS::TripleO::ContrailDpdk::Net::SoftwareConfig: tripleo-heat-templates/network/config/contrail/contrail-dpdk-nic-config-single.yaml
{%- if overcloud_ceph_instance > 0 %}
  OS::TripleO::CephStorage::Net::SoftwareConfig: tripleo-heat-templates/network/config/single-nic-vlans/ceph-storage.yaml
{%- endif %}

parameter_defaults:
  ExtraConfig:
    nova::debug: true
    glance::registry::debug: true
    glance::api::debug: true
    neutron::debug: true
    keystone::debug: true
    cinder::debug: true
    tripleo::profile::base::sshd::options:
      PasswordAuthentication: 'yes'
      PermitRootLogin: 'yes'
      UseDNS: 'no'
  GlanceBackend: '{{ glance_backend_storage }}'
  EnableGalera: '{{ enable_galera }}'
  RabbitUserName: 'contrail'
  RabbitPassword: 'contrail'
  AdminPassword: '{{ ADMIN_PASSWORD }}'
  NodeRootPassword: '{{ ADMIN_PASSWORD }}'
  InternalTLSCRLPEMFile: ''
  ExtraConfig:
    tripleo::firewall::firewall_rules:
      '004 accept ssh from all':
        dport: 22
        proto: tcp
        source: 0.0.0.0/0
        action: accept
  # Live VM migration via ssh
  MigrationSshKey:
    private_key: |
{{ SSH_PRIVATE_KEY }}
    public_key: |
{{ SSH_PUBLIC_KEY }}

  ConfigDebug: true
  CloudDomain: '{{ domain }}'
  CloudName: 'overcloud.{{ domain }}'
  CloudNameCtlplane: 'overcloud.ctlplane.{{ domain }}'
  CloudNameInternal: 'overcloud.internalapi.{{ domain }}'
  CloudNameStorage: 'overcloud.storage.{{ domain }}'
  CloudNameStorageManagement: 'overcloud.storagemgmt.{{ domain }}'
  ControlPlaneDefaultRoute: '{{ prov_ip }}'
  ControlPlaneSubnetCidr: {{ prov_subnet_len }}
  ControlFixedIPs: [{'ip_address':'{{ fixed_vip }}'}]
  # TODO
  # InternalApiVirtualFixedIPs: [{'ip_address':'172.16.0.9'}]
  # PublicVirtualFixedIPs: [{'ip_address':'10.1.1.9'}]
  # StorageVirtualFixedIPs: [{'ip_address':'172.18.0.9'}]
  # StorageMgmtVirtualFixedIPs: [{'ip_address':'172.19.0.9'}]
  # RedisVirtualFixedIPs: [{'ip_address':'172.16.0.8'}]
  #
  EC2MetadataIp: '{{ prov_ip }}'
  DnsServers: {{ overcloud_nameservers }}
  NtpServer: '{{ NTP_SERVERS }}'
  NovaComputeLibvirtType: '{{ overcloud_virt_type }}'
  # Disable online data migration
  # It has a race inside that appear as an error:
  #   /usr/bin/bootstrap_host_exec cinder_api su cinder -s /bin/bash -c 'cinder-manage db online_data_migrations'",
  #   Apr 25 09:52:43 rhosp13-overcloud-cont-6131 os-collect-config: "stdout: Running batches of 50 until complete.",
  #   Apr 25 09:52:43 rhosp13-overcloud-cont-6131 os-collect-config: "stderr: Option \"logdir\" from group \"DEFAULT\" is deprecated. Use optio
  #   n \"log-dir\" from group \"DEFAULT\"."
  EnableOnlineDataMigrations: false

  DockerInsecureRegistryAddress:
    - '{{ undercloud_registry }}'
    - '{{ undercloud_instance }}.ctlplane.{{ domain }}:8787'

  # Baremetal nodes placement scheduling
  ComputeSchedulerHints:
    'capabilities:node': 'overcloud-novacompute-%index%'
  ContrailDpdkSchedulerHints:
    'capabilities:node': 'overcloud-contraildpdk-%index%'
  ContrailSriovSchedulerHints:
    'capabilities:node': 'overcloud-contrailsriov-%index%'
  ComputeL3mhSchedulerHints:
    'capabilities:node': 'overcloud-computel3mh-%index%'
  ControllerSchedulerHints:
    'capabilities:node': 'overcloud-controller-%index%'
  ContrailControllerSchedulerHints:
    'capabilities:node': 'overcloud-contrailcontroller-%index%'
  ContrailOperatorSchedulerHints:
    'capabilities:node': 'overcloud-contrailcontroller-%index%'
  CephStorageSchedulerHints:
    'capabilities:node': 'overcloud-cephstorage-%index%'
  OvercloudComputeFlavor: baremetal
  OvercloudContrailDpdkFlavor: baremetal
  OvercloudContrailSriovFlavor: baremetal
  OvercloudControllerFlavor: baremetal
  OvercloudContrailControllerFlavor: baremetal
  OvercloudContrailOperatorFlavor: baremetal
  OvercloudCephStorageFlavor: baremetal

  ContrailRegistryInsecure: true
  ContrailRegistry: '{{ undercloud_registry_contrail }}'
  ContrailImageTag: '{{ CONTRAIL_CONTAINER_TAG }}'

  ContrailSettings:
    LOG_LEVEL: 'SYS_DEBUG'
    JVM_EXTRA_OPTS: '-Xms1g -Xmx4g'
    DPDK_UIO_DRIVER: 'vfio-pci'
    {{ vrouter_gateway_parameter }}

  ContrailConfigDBMinDiskGB: 4
  ContrailAnalyticsDBMinDiskGB: 4
  ContrailRedisPort: 6389

  ContrailDpdkDriver: 'vfio-pci'
  ContrailDpdkParameters:
    KernelArgs: "intel_iommu=on iommu=pt default_hugepagesz=1GB hugepagesz=1G hugepages=32"
    ExtraSysctlSettings:
      vm.nr_hugepages:
        value: 32
      vm.max_map_count:
        value: 128960

  ContrailSriovParameters:
    KernelArgs: "intel_iommu=on iommu=pt default_hugepagesz=1GB hugepagesz=1G hugepages=10"
    ExtraSysctlSettings:
      # must be equal to value from 1G kernel args: hugepages=4
      vm.nr_hugepages:
        value: 10
      vm.max_map_count:
        value: 128960

{%- if sriov_physical_interface is defined and sriov_vf_number is defined %}
    ContrailSriovNumVFs: ["{{ sriov_physical_interface }}:{{ sriov_vf_number }}"]
    NovaPCIPassthrough:
      - devname: "{{ sriov_physical_interface }}"
{%- endif %}
{%- if sriov_physical_network is defined %}
        physical_network: "{{ sriov_physical_network }}"
{%- endif %}

  ContrailVrouterHugepages1GB: '{{ hp1gb }}'
  ContrailVrouterHugepages2MB: '{{ hp2mb }}'
  ComputeParameters:
    KernelArgs: '{{ kernel_args }}'
    ExtraSysctlSettings:
      vm.nr_hugepages:
        value: {{ sysctl_hp }}
      vm.max_map_count:
        value: 128960

  ComputeL3mhParameters:
    KernelArgs: '{{ kernel_args }}'
    ExtraSysctlSettings:
      vm.nr_hugepages:
        value: {{ sysctl_hp }}
      vm.max_map_count:
        value: 128960
      net.ipv4.conf.all.rp_filter:
        value: 0
    ContrailSettings:
      L3MH_CIDR: "10.10.10.0/24"
      LOG_LEVEL: 'SYS_DEBUG'
      DPDK_UIO_DRIVER: 'vfio-pci'
      {{ vrouter_gateway_parameter }}

  ContrailAioParameters:
    KernelArgs: '{{ kernel_args }}'
    ExtraSysctlSettings:
      vm.nr_hugepages:
        value: {{ sysctl_hp }}
      vm.max_map_count:
        value: 128960

  ControllerCount: {{ overcloud_cont_instance }}
  ContrailControllerCount: {{ overcloud_ctrlcont_instance }}
  ContrailOperatorCount: {{ overcloud_operator_instance }}
  ComputeCount: {{ overcloud_compute_instance }}
  ComputeL3mhCount: {{ overcloud_computel3mh_instance }}
  ContrailDpdkCount: {{ overcloud_dpdk_instance }}
  ContrailSriovCount: {{ overcloud_sriov_instance }}
  CephStorageCount: {{ overcloud_ceph_instance }}
{%- if overcloud_ceph_instance > 0 %}
  CephDefaultPoolSize: 2
  CephPoolDefaultPgNum: 8
  ManilaCephFSDataPoolPGNum: 8
  ManilaCephFSMetadataPoolPGNum: 8
  CephAnsibleDisksConfig:
    devices:
      - /dev/vdb
      - /dev/vdc
      - /dev/vdd
      - /dev/vde
{%- endif %}

{%- if internal_vlan is defined %}
  InternalApiNetworkVlanID: {{ internal_vlan }}
{%- endif %}
{%- if external_vlan is defined %}
  ExternalNetworkVlanID: {{ external_vlan }}
{%- endif %}
{%- if storage_vlan is defined %}
  StorageNetworkVlanID: {{ storage_vlan }}
{%- endif %}
{%- if storage_mgmt_vlan is defined %}
  StorageMgmtNetworkVlanID: {{ storage_mgmt_vlan }}
{%- endif %}

{%- if internal_cidr is defined %}
  InternalApiNetCidr: {{ internal_cidr }}
  InternalApiAllocationPools: {{ internal_allocation_pool }}
  InternalApiDefaultRoute: {{ internal_default_route }}
{%- endif %}

{%- if external_cidr is defined %}
  ExternalNetCidr: {{ external_cidr }}
  ExternalAllocationPools: {{ external_allocation_pool }}
  ExternalInterfaceDefaultRoute: {{ external_default_route }}
{%- endif %}

{%- if storage_cidr is defined %}
  StorageNetCidr: {{ storage_cidr }}
  StorageAllocationPools: {{ storage_allocation_pool }}
{%- endif %}

{%- if storage_mgmt_cidr is defined %}
  StorageMgmtNetCidr: {{ storage_mgmt_cidr }}
  StorageMgmtAllocationPools: {{ storage_mgmt_allocation_pool }}
{%- endif %}

{%- if tenant_cidr is defined %}
  TenantNetCidr: {{ tenant_cidr }}
  TenantAllocationPools: {{ tenant_allocation_pool }}
{%- endif %}

{%- if dmi_uuids is defined and dmi_uuids|length %}
{%- set dmi_uuids = dmi_uuids.split() %}
{%- endif %}
  NodeDataLookup:
    {%- for uuid in dmi_uuids %}
    "{{ uuid }}":
      contrail_settings:
        test: "test"
    {%- endfor %}
