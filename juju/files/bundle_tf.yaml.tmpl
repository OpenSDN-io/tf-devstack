{%- if CLOUD == 'maas' %}
  {%- set VIRTUAL_IPS = VIRTUAL_IPS.split() %}
variables:
  tf-controller-vip:         &tf-controller-vip        "{{ VIRTUAL_IPS[0] }}"
{%- endif %}

{%- set controllers_count = CONTROLLER_NODES.split()|length %}
machines:
{%- for i in range(0, controllers_count|int) %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G
{%- endfor %}
{%- set controller_nodes = range(0, controllers_count|int) | list %}

series: "{{ UBUNTU_SERIES }}"
services:
  tf-controller:
    charm: "{{ JUJU_REPO }}/contrail-controller"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ controller_nodes | count }}
    options:
      log-level: "SYS_DEBUG"
{%- if CLOUD == 'maas' %}
      vip: *tf-controller-vip
{%- endif %}
      min-cluster-size: {{ controller_nodes | count }}
{%- if ORCHESTRATOR == 'openstack' or ORCHESTRATOR == 'hybrid' %}
      auth-mode: "rbac"
{%- else %}
      auth-mode: "no-auth"
{%- endif %}
      cassandra-minimum-diskgb: "4"
{%- if CLOUD == 'maas' %}
      cassandra-jvm-extra-opts: "-Xms16g -Xmx16g"
{%- else %}
      cassandra-jvm-extra-opts: "-Xms1g -Xmx2g"
{%- endif %}
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if CONTROL_NETWORK %}
      control-network: "{{ CONTROL_NETWORK }}"
{%- endif %}
{%- if DATA_NETWORK %}
      data-network: "{{ DATA_NETWORK }}"
{%- endif %}
    expose: true
    to: {{ controller_nodes }}

{%- if (LEGACY_ANALYTICS_ENABLE | lower) == 'true' %}
  tf-analyticsdb:
    charm: "{{ JUJU_REPO }}/contrail-analyticsdb"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ controller_nodes | count }}
    options:
      log-level: "SYS_DEBUG"
      cassandra-minimum-diskgb: "4"
{%- if CLOUD == 'maas' %}
      cassandra-jvm-extra-opts: "-Xms16g -Xmx16g"
{%- else %}
      cassandra-jvm-extra-opts: "-Xms1g -Xmx2g"
{%- endif %}
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if CONTROL_NETWORK %}
      control-network: "{{ CONTROL_NETWORK }}"
{%- endif %}
      min-cluster-size: {{ controller_nodes | count }}
    expose: true
    to: {{ controller_nodes }}
{%- endif %}

  tf-analytics:
    charm: "{{ JUJU_REPO }}/contrail-analytics"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ controller_nodes | count }}
    options:
      log-level: "SYS_DEBUG"
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if CONTROL_NETWORK %}
      control-network: "{{ CONTROL_NETWORK }}"
{%- endif %}
      min-cluster-size: {{ controller_nodes | count }}
{%- if CLOUD == 'maas' %}
      vip: *tf-controller-vip
{%- endif %}
    expose: true
    to: {{ controller_nodes }}

{%- if ENABLE_DPDK_SRIOV.lower() == 'true' %}
  tf-agent-dpdk:
    charm: "{{ JUJU_REPO }}/contrail-agent"
    series: "{{ UBUNTU_SERIES }}"
    options:
      dpdk: True
      dpdk-coremask: '3'
      dpdk-driver: 'vfio-pci'
      log-level: "SYS_DEBUG"
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
  tf-agent-sriov:
    charm: "{{ JUJU_REPO }}/contrail-agent"
    series: "{{ UBUNTU_SERIES }}"
    options:
      sriov-physical-interface: "{{ SRIOV_PHYSICAL_INTERFACE }}"
      sriov-numvfs: "{{ SRIOV_VF }}"
      kernel-hugepages-1g: "32"
      kernel-hugepages-2m: "2048"
      log-level: "SYS_DEBUG"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- else %}
  tf-agent:
    charm: "{{ JUJU_REPO }}/contrail-agent"
    series: "{{ UBUNTU_SERIES }}"
    options:
      log-level: "SYS_DEBUG"
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if HUGE_PAGES_1G %}
      kernel-hugepages-1g: "{{ HUGE_PAGES_1G }}"
{%- elif HUGE_PAGES_2MB %}
      kernel-hugepages-2m: "{{ HUGE_PAGES_2MB }}"
{%- endif %}
{%- endif %}
{%- if ORCHESTRATOR == 'openstack' or ORCHESTRATOR == 'hybrid' %}
  tf-keystone-auth:
    charm: "{{ JUJU_REPO }}/contrail-keystone-auth"
    series: "{{ UBUNTU_SERIES }}"
    num_units: 1
    to:
      - "0"

  tf-openstack:
    charm: "{{ JUJU_REPO }}/contrail-openstack"
    series: "{{ UBUNTU_SERIES }}"
    options:
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- endif %}

{%- if ORCHESTRATOR == 'kubernetes' or ORCHESTRATOR == 'hybrid' %}
  tf-kubernetes-master:
    series: "{{ UBUNTU_SERIES }}"
    charm: "{{ JUJU_REPO }}/contrail-kubernetes-master"
    options:
      log-level: 'SYS_DEBUG'
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
      cluster_name: "k8s"
      public_fip_pool: "{'domain':'{{ KUBERNETES_CLUSTER_DOMAIN | default('default-domain') }}','project':'{{ KUBERNETES_CLUSTER_PROJECT |  default('k8s-default') }}','name':'__fip_pool_public__','network':'__public__'}"
      ip_fabric_snat: true

  tf-kubernetes-node:
    series: "{{ UBUNTU_SERIES }}"
    charm: "{{ JUJU_REPO }}/contrail-kubernetes-node"
    options:
      log-level: 'SYS_DEBUG'
{%- if CONTAINER_RUNTIME == 'containerd' %}
      container_runtime: containerd
{%- endif %}
      docker_runtime: auto
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- endif %}

{%- if SSL_ENABLE.lower() == 'true' %}
  easyrsa:
    # this must be one in HA
    charm: easyrsa
    num_units: 1
    to:
      - "0"
{%- endif %}
{%- if ENABLE_NAGIOS.lower() == 'true' %}
  nrpe:
    charm: nrpe
{%- endif %}
{%- if CLOUD == 'maas' %}
  keepalived:
    charm: keepalived
    options:
      virtual_ip: *tf-controller-vip
      # do checks for haproxy monitoring_port
      port: 10000
  haproxy:
    charm: haproxy
    num_units: 3
    expose: true
    to: {{ controller_nodes }}
    options:
      peering_mode: active-active
      ssl_cert: SELFSIGNED
      enable_monitoring: True
{%- endif %}

relations:
# tf
- [ tf-controller, tf-analytics ]
{%- if (LEGACY_ANALYTICS_ENABLE | lower) == 'true' %}
- [ tf-controller, tf-analyticsdb ]
- [ tf-analytics, tf-analyticsdb ]
{%- endif %}
{%- if ENABLE_DPDK_SRIOV.lower() == 'true' %}
- [ tf-agent-dpdk, tf-controller ]
- [ tf-agent-sriov, tf-controller ]
{%- else %}
- [ tf-agent, tf-controller ]
{%- endif %}

{%- if SSL_ENABLE.lower() == 'true' %}
- [ easyrsa, tf-controller ]
- [ easyrsa, tf-analytics ]
{%- if (LEGACY_ANALYTICS_ENABLE | lower) == 'true' %}
- [ easyrsa, tf-analyticsdb ]
{%- endif %}
{%- if ENABLE_DPDK_SRIOV.lower() == 'true' %}
- [ easyrsa, tf-agent-dpdk ]
- [ easyrsa, tf-agent-sriov ]
{%- else %}
- [ easyrsa, tf-agent ]
{%- endif %}
{%- if ORCHESTRATOR == 'kubernetes' or ORCHESTRATOR == 'hybrid' %}
- [ easyrsa, tf-kubernetes-master ]
{%- endif %}
{%- endif %}

{%- if ORCHESTRATOR == 'openstack' or ORCHESTRATOR == 'hybrid' %}
- [ tf-controller, tf-keystone-auth ]
- [ tf-openstack, tf-controller ]
{%- if ENABLE_NAGIOS.lower() == 'true' %}
- [ nrpe:nrpe-external-master, tf-keystone-auth:nrpe-external-master ]
{%- endif %}
{%- endif %}
{%- if ORCHESTRATOR == 'kubernetes' or ORCHESTRATOR == 'hybrid' %}
- [ tf-kubernetes-master:contrail-controller, tf-controller:contrail-controller ]
- [ tf-kubernetes-master:contrail-kubernetes-config, tf-kubernetes-node:contrail-kubernetes-config ]
{%- if ENABLE_NAGIOS.lower() == 'true' %}
- [ nrpe:nrpe-external-master, tf-kubernetes-master:nrpe-external-master ]
{%- endif %}
{%- endif %}
{%- if CLOUD == 'maas' %}
- [ tf-controller:http-services, haproxy:reverseproxy ]
- [ tf-controller:https-services, haproxy:reverseproxy ]
- [ tf-analytics:http-services, haproxy:reverseproxy ]
- [ keepalived:juju-info, haproxy:juju-info ]
{%- endif %}

{%- if ENABLE_NAGIOS.lower() == 'true' %}
- [ nrpe:nrpe-external-master, tf-controller:nrpe-external-master ]
- [ nrpe:nrpe-external-master, tf-analytics:nrpe-external-master ]
- [ nrpe:nrpe-external-master, tf-analyticsdb:nrpe-external-master ]
- [ nrpe:nrpe-external-master, tf-agent:nrpe-external-master ]
{%- endif %}
