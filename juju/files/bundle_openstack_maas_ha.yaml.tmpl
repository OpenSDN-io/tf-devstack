{% set VIRTUAL_IPS = VIRTUAL_IPS.split() -%}

{%- set placement = false %}
{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri'  or OPENSTACK_VERSION == 'yoga' %}
{%- set placement = true %}
{%- endif %}

# ubuntu 20.04 has only mysql-innodb-cluster charm for mysql db. but it's still ugly and buggy...
{%- set mysql_innodb = false %}
{%- if UBUNTU_SERIES in ['focal', 'jammy'] %}
{%- set mysql_innodb = true %}
{%- endif %}

series: {{ UBUNTU_SERIES }}
variables:
# VIRTUAL_IPS[0] - for config-api
  heat-vip:            &heat-vip            "{{ VIRTUAL_IPS[1] }}"
  glance-vip:          &glance-vip          "{{ VIRTUAL_IPS[2] }}"
  keystone-vip:        &keystone-vip        "{{ VIRTUAL_IPS[3] }}"
  mysql-vip:           &mysql-vip           "{{ VIRTUAL_IPS[4] }}"
  neutron-api-vip:     &neutron-api-vip     "{{ VIRTUAL_IPS[5] }}"
  nova-cc-vip:         &nova-cc-vip         "{{ VIRTUAL_IPS[6] }}"
  placement-vip:       &placement-vip       "{{ VIRTUAL_IPS[7] }}"
  swift-proxy-vip:     &swift-proxy-vip     "{{ VIRTUAL_IPS[8] }}"

  default-space:       &default-space       default
  data-space:          &data-space          data

machines:
  "0":
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=32G cores=8 root-disk=300G {% if ENABLE_DPDK_SRIOV == 'true' %}tags=control{% endif %}
  "1":
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=32G cores=8 root-disk=300G {% if ENABLE_DPDK_SRIOV == 'true' %}tags=control{% endif %}
  "2":
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=32G cores=8 root-disk=300G {% if ENABLE_DPDK_SRIOV == 'true' %}tags=control{% endif %}
  "3":
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=100G {% if ENABLE_DPDK_SRIOV == 'true' %}tags=sriov{% endif %}
  "4":
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=100G {% if ENABLE_DPDK_SRIOV == 'true' %}tags=dpdk{% endif %}

series: "{{ UBUNTU_SERIES }}"
services:
  hacluster-keystone:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  hacluster-nova:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  hacluster-heat:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  hacluster-neutron:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  hacluster-glance:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  hacluster-placement:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  hacluster-swift-proxy:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  glance:
    charm: "cs:{{ UBUNTU_SERIES }}/glance"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *glance-vip
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
  ceph-mon:
    charm: cs:{{ UBUNTU_SERIES }}/ceph-mon
    num_units: 3
    bindings:
      "": *default-space
    options:
      expected-osd-count: 3
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
  ceph-osd:
    charm: cs:{{ UBUNTU_SERIES }}/ceph-osd
    num_units: 3
    options:
      osd-devices: /dev/sdb
    to:
      - "0"
      - "1"
      - "2"
  keystone:
    charm: "cs:{{ UBUNTU_SERIES }}/keystone"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *keystone-vip
      admin-password: "{{ AUTH_PASSWORD }}"
      admin-role: "admin"
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      preferred-api-version: "3"
    expose: true
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"

{%- if not mysql_innodb %}
  hacluster-mysql:
    charm: cs:{{ UBUNTU_SERIES }}/hacluster
  mysql:
    charm: "cs:{{ UBUNTU_SERIES }}/percona-cluster"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *mysql-vip
      min-cluster-size: 3
      root-password: "password"
      max-connections: 1500
      tuning-level: fast
      performance-schema: true
      source: "{{ OPENSTACK_ORIGIN }}"
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"

{%- else %}

  keystone-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
  glance-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
  nova-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
  neutron-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
  dashboard-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
  heat-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri'  or OPENSTACK_VERSION == 'yoga' %}
  placement-mysql-router:
    charm: cs:mysql-router
    options:
      source: "{{ OPENSTACK_ORIGIN }}"
{%- endif %}

  mysql-innodb-cluster:
    charm: cs:{{ UBUNTU_SERIES }}/mysql-innodb-cluster
    num_units: 3
    bindings:
      "": *default-space
    options:
      max-connections: 1500
      source: "{{ OPENSTACK_ORIGIN }}"
    to:
    - lxd:0
    - lxd:1
    - lxd:2
{%- endif %}

  rabbitmq-server:
    charm: "cs:{{ UBUNTU_SERIES }}/rabbitmq-server"
    num_units: 3
    bindings:
      "": *default-space
    options:
      min-cluster-size: 3
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
  neutron-api:
    charm: "cs:{{ UBUNTU_SERIES }}/neutron-api"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *neutron-api-vip
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      manage-neutron-plugin-legacy-mode: false
      neutron-security-groups: "true"
    expose: true
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
  heat:
    charm: "cs:{{ UBUNTU_SERIES }}/heat"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *heat-vip
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"

  swift-proxy:
    charm: "cs:{{ UBUNTU_SERIES }}/swift-proxy"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *swift-proxy-vip
      zone-assignment: manual
      replicas: 3
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - lxd:0
      - lxd:1
      - lxd:2
  swift-storage1:
    charm: "cs:{{ UBUNTU_SERIES }}/swift-storage"
    num_units: 1
    bindings:
      "": *default-space
    options:
      block-device: '/etc/swift/storagedev1.img|15G'
      zone: 1
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    to:
      - 0
  swift-storage2:
    charm: "cs:{{ UBUNTU_SERIES }}/swift-storage"
    num_units: 1
    bindings:
      "": *default-space
    options:
      block-device: '/etc/swift/storagedev1.img|15G'
      zone: 2
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    to:
      - 1
  swift-storage3:
    charm: "cs:{{ UBUNTU_SERIES }}/swift-storage"
    num_units: 1
    bindings:
      "": *default-space
    options:
      block-device: '/etc/swift/storagedev1.img|15G'
      zone: 3
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    to:
      - 2

{%- if placement %}
  placement:
    charm: "cs:{{ UBUNTU_SERIES }}/placement"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *placement-vip
      debug: "true"
      openstack-origin: {{ OPENSTACK_ORIGIN }}
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
{%- endif %}
  nova-cloud-controller:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-cloud-controller"
    num_units: 3
    bindings:
      "": *default-space
    options:
      vip: *nova-cc-vip
      network-manager: "Neutron"
      console-access-protocol: "novnc"
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      cache-known-hosts: "false"
    expose: true
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
  memcached:
    charm: "cs:{{ UBUNTU_SERIES }}/memcached"
    num_units: 3
    bindings:
      "": *default-space
    options:
      allow-ufw-ip6-softfail: "True"
    to:
      - "lxd:0"
      - "lxd:1"
      - "lxd:2"
{%- if ENABLE_DPDK_SRIOV == 'true' %}
  nova-compute-sriov:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-compute"
    series: {{ UBUNTU_SERIES }}
    num_units: 1
    bindings:
      "": *default-space
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      virt-type: "kvm"
      libvirt-image-backend: "rbd"
      enable-resize: "true"
      enable-live-migration: "true"
      migration-auth-type: "ssh"
      pci-passthrough-whitelist: '{"devname":"{{ SRIOV_PHYSICAL_INTERFACE }}", "physical_network":"{{ SRIOV_PHYSICAL_NETWORK }}"}'
    to:
      - "3"
  nova-compute-dpdk:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-compute"
    series: {{ UBUNTU_SERIES }}
    num_units: 1
    bindings:
      "": *default-space
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      virt-type: "kvm"
      libvirt-image-backend: "rbd"
      enable-resize: "true"
      enable-live-migration: "true"
      migration-auth-type: "ssh"
    to:
      - "4"
{%- else %}
  nova-compute:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-compute"
    series: {{ UBUNTU_SERIES }}
    num_units: 2
    bindings:
      "": *default-space
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      virt-type: "kvm"
      libvirt-image-backend: "rbd"
      enable-resize: "true"
      enable-live-migration: "true"
      migration-auth-type: "ssh"
    to:
      - "3"
      - "4"
{%- endif %}
  openstack-dashboard:
    charm: "cs:{{ UBUNTU_SERIES }}/openstack-dashboard"
    num_units: 1
    bindings:
      "": *default-space
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:2"

  # misc

  ubuntu:
    charm: "cs:{{ UBUNTU_SERIES }}/ubuntu"
    num_units: 5
    bindings:
      "": *default-space
    to:
      - "0"
      - "1"
      - "2"
      - "3"
      - "4"
  ntp:
    charm: "cs:{{ UBUNTU_SERIES }}/ntp-41"
{%- if NTP_SERVERS %}
    options:
      source: "{{ NTP_SERVERS }}"
{%- endif %}


relations:

{%- if ENABLE_DPDK_SRIOV == 'true' %}
- [ nova-compute-dpdk:amqp, rabbitmq-server:amqp ]
- [ nova-compute-dpdk:image-service, glance:image-service ]
- [ nova-compute-dpdk, ceph-mon ]
- [ nova-cloud-controller:cloud-compute, nova-compute-dpdk:cloud-compute ]
- [ nova-compute-sriov:amqp, rabbitmq-server:amqp ]
- [ nova-compute-sriov:image-service, glance:image-service ]
- [ nova-compute-sriov, ceph-mon ]
- [ nova-cloud-controller:cloud-compute, nova-compute-sriov:cloud-compute ]
{%- else %}
- [ nova-compute:amqp, rabbitmq-server:amqp ]
- [ nova-compute:image-service, glance:image-service ]
- [ nova-cloud-controller:cloud-compute, nova-compute:cloud-compute ]
- [ nova-compute, ceph-mon ]
{%- endif %}

{%- if placement %}
- [ placement, keystone:identity-service ]
- [ placement, nova-cloud-controller ]
- [ placement, hacluster-placement ]
{%- endif %}

- [ nova-cloud-controller:identity-service, keystone:identity-service ]
- [ glance:identity-service, keystone:identity-service ]
- [ neutron-api:identity-service, keystone:identity-service ]
- [ neutron-api:amqp, rabbitmq-server:amqp ]
- [ glance:amqp, rabbitmq-server:amqp ]
- [ nova-cloud-controller:image-service, glance:image-service ]
- [ nova-cloud-controller:amqp, rabbitmq-server:amqp ]
- [ openstack-dashboard:identity-service, keystone:identity-service ]
- [ nova-cloud-controller:neutron-api, neutron-api:neutron-api ]
- [ heat:amqp, rabbitmq-server:amqp ]
- [ heat, keystone ]
- [ swift-proxy, rabbitmq-server ]
- [ swift-proxy, keystone ]
- [ swift-proxy, swift-storage1 ]
- [ swift-proxy, swift-storage2 ]
- [ swift-proxy, swift-storage3 ]

- [ ubuntu, ntp ]

{%- if not mysql_innodb %}

- [ mysql, hacluster-mysql ]
- [ keystone:shared-db, mysql:shared-db ]
- [ glance:shared-db, mysql:shared-db ]
- [ nova-cloud-controller:shared-db, mysql:shared-db ]
- [ neutron-api:shared-db, mysql:shared-db ]
- [ openstack-dashboard:shared-db, mysql:shared-db ]
- [ heat:shared-db, mysql:shared-db ]
{%- if placement %}
- [ placement, mysql:shared-db ]
{%- endif %}

{%- else %}

- [ keystone:shared-db, keystone-mysql-router:shared-db ]
- [ keystone-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ glance:shared-db, glance-mysql-router:shared-db ]
- [ glance-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ nova-cloud-controller:shared-db, nova-mysql-router:shared-db ]
- [ nova-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ neutron-api:shared-db, neutron-mysql-router:shared-db ]
- [ neutron-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ openstack-dashboard:shared-db, dashboard-mysql-router:shared-db ]
- [ dashboard-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ heat:shared-db, heat-mysql-router:shared-db ]
- [ heat-mysql-router:db-router, mysql-innodb-cluster:db-router ]
{%- if placement %}
- [ placement:shared-db, placement-mysql-router:shared-db ]
- [ placement-mysql-router:db-router, mysql-innodb-cluster:db-router ]
{%- endif %}

{%- endif %}

- [ keystone, hacluster-keystone ]
- [ heat, hacluster-heat ]
- [ glance, hacluster-glance ]
- [ neutron-api, hacluster-neutron ]
- [ nova-cloud-controller, hacluster-nova ]
- [ swift-proxy, hacluster-swift-proxy ]
- [ glance, ceph-mon ]
- [ ceph-osd, ceph-mon ]
- [ nova-cloud-controller, memcached ]
- [ nova-cloud-controller:memcache, memcached:cache ]
