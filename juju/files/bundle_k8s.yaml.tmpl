# from https://github.com/charmed-kubernetes/bundle/blob/main/releases/1.24/bundle.yaml

machines:
{%- set controllers_count = CONTROLLER_NODES.split()|length %}
{%- if AGENT_NODES|string == NODE_IP|string %}
  {%- set all_nodes_count = controllers_count|int %}
  {%- set agent_nodes = [0] %}
{%- else %}
  {%- set controller_nodes_list = CONTROLLER_NODES.split() %}
  {%- set agent_nodes_list = AGENT_NODES.split() %}
  {%- set all_nodes_list = controller_nodes_list + agent_nodes_list %}
  {%- set all_nodes_list = all_nodes_list | unique | list %}
  {%- set all_nodes_count = all_nodes_list | length %}
  {%- set common_nodes = [] %}
  {%- for agent in agent_nodes_list %}
    {%- if agent in controller_nodes_list %}
      {{ common_nodes.append(controller_nodes_list.index(agent))|default("", True) }}
    {%- endif %}
  {%- endfor %}
  {%- set agent_nodes = common_nodes + range(controllers_count|int, all_nodes_count) | list %}
{%- endif %}
{%- set all_nodes = range(0, all_nodes_count) | list %}
{%- set controller_nodes = range(0, controllers_count|int) | list %}

{%- set k8s_ver = K8S_VERSION | default("1.22") | replace("v", "") | replace("V", "") | replace("-", ".") %}
{%- set k8s_ver = k8s_ver.split(".")[0:2] | join(".") %}
{%- set k8s_channel = k8s_ver + "/stable" %}

{%- for i in range(0, all_nodes_count) %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=8 root-disk=120G
{%- endfor %}

series: "{{ UBUNTU_SERIES }}"
services:

  # kubernetes

  easyrsa:
    series: "{{ UBUNTU_SERIES }}"
    channel: 1.24/stable
    charm: easyrsa
    num_units: 1
    to:
    - 0

  etcd:
    series: "{{ UBUNTU_SERIES }}"
    channel: 1.24/stable
    charm: etcd
    num_units: {{ controller_nodes | count }}
    options:
      channel: 3.4/stable
    to: {{ controller_nodes }}

#  kubeapi-load-balancer:
#    series: "{{ UBUNTU_SERIES }}"
#    channel: 1.24/stable
#    charm: kubeapi-load-balancer
#    num_units: 1
#    to:
#    - 0
  kubernetes-control-plane:
    series: "{{ UBUNTU_SERIES }}"
    channel: 1.24/stable
    charm: kubernetes-control-plane
    expose: true
    num_units: {{ controller_nodes | count }}
    options:
      channel: '{{ k8s_channel }}'
      enable-metrics: false
      enable-dashboard-addons: false
      service-cidr: '10.96.0.0/12'
      snapd_refresh: 'max'
{%- if ORCHESTRATOR == 'kubernetes' %}
      authorization-mode: 'AlwaysAllow'
{%- endif %}
    to: {{ controller_nodes }}
  kubernetes-worker:
    series: "{{ UBUNTU_SERIES }}"
    channel: 1.24/stable
    charm: kubernetes-worker
    expose: true
    num_units: {{ agent_nodes | count }}
    options:
      channel: '{{ k8s_channel }}'
      ingress: false
      snapd_refresh: 'max'
    to: {{ agent_nodes }}

  containerd:
    series: "{{ UBUNTU_SERIES }}"
    channel: 1.24/stable
    charm: containerd

{%- if ENABLE_NAGIOS == 'true' and '20.' not in DISTRO_VERSION_ID %}
  nagios:
    charm: cs:nagios-40
    num_units: 1
    to:
    - "0"
    expose: true
  nrpe:
    charm: cs:nrpe-69
{%- endif %}

  # misc
  ubuntu:
    charm: "ubuntu"
    series: "{{ UBUNTU_SERIES }}"
{%- if ORCHESTRATOR == 'hybrid' %}
    num_units: {{ all_nodes | count + 1 }}
{%- else %}
    num_units: {{ all_nodes | count }}
{%- endif %}
    channel: stable
    revision: 24
    to: {{ all_nodes }}
  ntp:
    charm: "ntp"
{%- if NTP_SERVERS %}
    options:
      source: "{{ NTP_SERVERS }}"
{%- endif %}


relations:

#- - kubernetes-control-plane:loadbalancer-external
#  - kubeapi-load-balancer:lb-consumers
#- - kubernetes-control-plane:loadbalancer-internal
#  - kubeapi-load-balancer:lb-consumers
- - kubernetes-control-plane:kube-control
  - kubernetes-worker:kube-control
- - kubernetes-control-plane:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client
- - kubernetes-control-plane:etcd
  - etcd:db
- - kubernetes-worker:certificates
  - easyrsa:client
#- - kubeapi-load-balancer:certificates
#  - easyrsa:client
- - containerd:containerd
  - kubernetes-worker:container-runtime
- - containerd:containerd
  - kubernetes-control-plane:container-runtime

{%- if ENABLE_NAGIOS == 'true' and '20.' not in DISTRO_VERSION_ID %}
- [ nrpe:monitors, nagios:monitors ]
{%- endif %}

- [ ubuntu, ntp ]
